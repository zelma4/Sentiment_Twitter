#!/usr/bin/env python3
"""
Quick Start Script for Bitcoin Analysis Bot
"""

import os
import sys

def create_minimal_env():
    """Create a minimal .env file for testing"""
    env_content = """# Bitcoin Analysis Bot Environment Variables

# ==============================================
# –û–ë–û–í'–Ø–ó–ö–û–í–Ü –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø (–∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤–∞—à—ñ –∫–ª—é—á—ñ)
# ==============================================

# Twitter API (required for sentiment analysis)
TWITTER_BEARER_TOKEN=your_twitter_bearer_token_here
TWITTER_API_KEY=your_twitter_api_key_here
TWITTER_API_SECRET=your_twitter_api_secret_here
TWITTER_ACCESS_TOKEN=your_twitter_access_token_here
TWITTER_ACCESS_TOKEN_SECRET=your_twitter_access_token_secret_here

# Reddit API (required for sentiment analysis)
REDDIT_CLIENT_ID=your_reddit_client_id_here
REDDIT_CLIENT_SECRET=your_reddit_client_secret_here
REDDIT_USER_AGENT=BitcoinAnalysisBot/1.0

# ==============================================
# –û–ü–¶–Ü–û–ù–ê–õ–¨–ù–Ü –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø
# ==============================================

# Binance API (for better price data)
BINANCE_API_KEY=
BINANCE_SECRET_KEY=

# CoinGecko API (free alternative)
COINGECKO_API_KEY=

# Telegram Bot (for notifications)
TELEGRAM_BOT_TOKEN=
TELEGRAM_CHAT_ID=

# ==============================================
# –°–ò–°–¢–ï–ú–ù–Ü –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø
# ==============================================

DATABASE_URL=sqlite:///bitcoin_analysis.db
UPDATE_INTERVAL_MINUTES=30
PREDICTION_DAYS=7
MIN_SENTIMENT_POSTS=20
PORT=8000
HOST=0.0.0.0
"""
    
    with open('.env', 'w') as f:
        f.write(env_content)
    
    print("‚úÖ Created .env file")
    print("‚ö†Ô∏è  –í–ê–ñ–õ–ò–í–û: –í—ñ–¥—Ä–µ–¥–∞–≥—É–π—Ç–µ .env —Ñ–∞–π–ª —Ç–∞ –¥–æ–¥–∞–π—Ç–µ –≤–∞—à—ñ API –∫–ª—é—á—ñ!")

def main():
    print("üöÄ Bitcoin Analysis Bot - Quick Start")
    print("=" * 50)
    
    # Check if .env exists
    if not os.path.exists('.env'):
        create_minimal_env()
    
    print("\nüìã –©–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑—Ä–æ–±–∏—Ç–∏ –¥–∞–ª—ñ:")
    print("\n1. üîë –û–¢–†–ò–ú–ê–ô–¢–ï API –ö–õ–Æ–ß–Ü:")
    print("   ‚Ä¢ Twitter: https://developer.twitter.com/")
    print("   ‚Ä¢ Reddit: https://www.reddit.com/prefs/apps")
    print("   ‚Ä¢ (–û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ) Binance, CoinGecko, Telegram")
    
    print("\n2. ‚öôÔ∏è  –ù–ê–õ–ê–®–¢–£–ô–¢–ï .env –§–ê–ô–õ:")
    print("   ‚Ä¢ –í—ñ–¥–∫—Ä–∏–π—Ç–µ .env —Ñ–∞–π–ª —É —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É —Ä–µ–¥–∞–∫—Ç–æ—Ä—ñ")
    print("   ‚Ä¢ –ó–∞–º—ñ–Ω—ñ—Ç—å 'your_*_here' –Ω–∞ –≤–∞—à—ñ —Å–ø—Ä–∞–≤–∂–Ω—ñ API –∫–ª—é—á—ñ")
    
    print("\n3. üì¶ –í–°–¢–ê–ù–û–í–Ü–¢–¨ –ó–ê–õ–ï–ñ–ù–û–°–¢–Ü:")
    print("   pip install -r requirements.txt")
    
    print("\n4. üóÑÔ∏è  –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–£–ô–¢–ï –ë–ê–ó–£ –î–ê–ù–ò–•:")
    print("   python -c \"from database.models import create_database; create_database()\"")
    
    print("\n5. üß™ –ü–†–û–¢–ï–°–¢–£–ô–¢–ï –°–ò–°–¢–ï–ú–£:")
    print("   python test_bot.py")
    
    print("\n6. üöÄ –ó–ê–ü–£–°–¢–Ü–¢–¨ –ë–û–¢–ê:")
    print("   python main.py")
    
    print("\n7. üåê –í–Ü–î–ö–†–ò–ô–¢–ï –î–ê–®–ë–û–†–î:")
    print("   http://localhost:8000")
    
    print("\n" + "=" * 50)
    print("üìö –î–µ—Ç–∞–ª—å–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó: —á–∏—Ç–∞–π—Ç–µ DEPLOYMENT.md")
    print("üêõ –ü—Ä–æ–±–ª–µ–º–∏? –ó–∞–ø—É—Å—Ç—ñ—Ç—å: python test_bot.py")
    print("üí° –ü—ñ–¥–∫–∞–∑–∫–∞: –ø–æ—á–Ω—ñ—Ç—å –∑ Twitter + Reddit API –∫–ª—é—á—ñ–≤")

if __name__ == "__main__":
    main()
