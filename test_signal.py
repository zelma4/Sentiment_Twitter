#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª—É
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from utils.helpers import send_telegram_message, create_alert_message
from datetime import datetime

def send_test_signal():
    """–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ç–µ—Å—Ç–æ–≤–∏–π —Å–∏–≥–Ω–∞–ª"""
    
    # –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –∑ —Å–∏–≥–Ω–∞–ª–æ–º
    test_analysis = {
        'timestamp': datetime.utcnow(),
        'price_data': {
            'current_price': 109733.92,
            'price_change_24h': 3.2  # 3.2% –∑–º—ñ–Ω–∞ - –º–∞—î —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ä–µ–≥—É–ª—è—Ä–Ω–∏–π —Å–∏–≥–Ω–∞–ª
        },
        'sentiment': {
            'overall': {
                'overall_score': 0.45,  # –ü–æ–º—ñ—Ä–Ω–æ –ø–æ–∑–∏—Ç–∏–≤–Ω–∏–π
                'confidence': 0.78,
                'total_posts': 42
            }
        },
        'technical': {
            'recommendation': 'BUY',  # –°–∏–≥–Ω–∞–ª –Ω–∞ –ø–æ–∫—É–ø–∫—É
            'signals': {
                'strength': 0.72
            }
        },
        'predictions': {
            'predictions': {
                '24h': {
                    'predicted_price': 113250.00,
                    'price_change_pct': 3.2,
                    'confidence': 0.81
                }
            }
        }
    }
    
    # –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    message = create_alert_message(test_analysis, alert_type="UPDATE")
    
    print("üîÆ –¢–µ—Å—Ç–æ–≤–∏–π —Å–∏–≥–Ω–∞–ª:")
    print(message)
    print("\n" + "="*50)
    
    # –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –≤ Telegram
    try:
        success = send_telegram_message(message)
        if success:
            print("‚úÖ –¢–µ—Å—Ç–æ–≤–∏–π —Å–∏–≥–Ω–∞–ª –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram!")
        else:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤ Telegram")
        return success
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üì± –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç—Ä–µ–π–¥–∏–Ω–≥ —Å–∏–≥–Ω–∞–ª—É...")
    send_test_signal()
